/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.employeesystem.views;

//importing all necessary components
import com.employeesystem.controller.algorithms.BinarySearch;
import com.employeesystem.controller.algorithms.InsertionSort;
import com.employeesystem.controller.algorithms.MergeSort;
import com.employeesystem.controller.algorithms.SelectionSort;
import com.employeesystem.model.EmployeeModel;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
* @author Krishab Munankarmi
* LMU ID: 23048630
 */
public class AdminFrame extends javax.swing.JFrame {

    //Creating a new Linked List
    List<EmployeeModel> linkedList = new LinkedList<EmployeeModel>();
    DefaultTableModel employeeTable;
    
    //Creating Objects for Sorting classes
    SelectionSort selectionSort = new SelectionSort();
    InsertionSort insertionSort = new InsertionSort();
    MergeSort mergeSort = new MergeSort();
    
    /**
     * Creates new form AdminFrame
     */
    public AdminFrame() {
        initComponents();
        PreviousEmployees();
        employeeTable = (DefaultTableModel) tableEmployeeInformation.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMainAdmin = new javax.swing.JPanel();
        pnlHeading = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblBarImage = new javax.swing.JLabel();
        tabPaneMain = new javax.swing.JTabbedPane();
        pnlHomePage = new javax.swing.JPanel();
        lblGreeting = new javax.swing.JLabel();
        lblWelcome = new javax.swing.JLabel();
        lblImageEmpManage = new javax.swing.JLabel();
        btnReturn = new javax.swing.JButton();
        lblDescription = new javax.swing.JLabel();
        lblDescription1 = new javax.swing.JLabel();
        lblNote = new javax.swing.JLabel();
        lblNote2 = new javax.swing.JLabel();
        lblNote3 = new javax.swing.JLabel();
        lblNote4 = new javax.swing.JLabel();
        pnlEmployeeLists = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableEmployeeInformation = new javax.swing.JTable();
        lblTableinfo = new javax.swing.JLabel();
        cmbboxSortbyID = new javax.swing.JComboBox<>();
        cmbboxSortbyName = new javax.swing.JComboBox<>();
        txtFldSearch = new javax.swing.JTextField();
        btnSeach = new javax.swing.JButton();
        cmbboxSortbyPosition = new javax.swing.JComboBox<>();
        pnlAdminDashboard = new javax.swing.JPanel();
        pnlFormTitle = new javax.swing.JPanel();
        lblFormTitle = new javax.swing.JLabel();
        txtFldEmpID = new javax.swing.JTextField();
        txtFldFullName = new javax.swing.JTextField();
        txtFldAddress = new javax.swing.JTextField();
        txtFldContact = new javax.swing.JTextField();
        txtFldAge = new javax.swing.JTextField();
        txtFldPosition = new javax.swing.JTextField();
        txtFldContract = new javax.swing.JTextField();
        btnAddEmp = new javax.swing.JButton();
        btnUpdateEmp = new javax.swing.JButton();
        btnDeleteEmp = new javax.swing.JButton();
        btnClearTxtFld = new javax.swing.JButton();
        lblEmpID = new javax.swing.JLabel();
        lblContactNo = new javax.swing.JLabel();
        lblFullName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblPosition = new javax.swing.JLabel();
        lblContract = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1540, 960));

        pnlMainAdmin.setBackground(new java.awt.Color(255, 204, 0));
        pnlMainAdmin.setMaximumSize(new java.awt.Dimension(1540, 960));
        pnlMainAdmin.setMinimumSize(new java.awt.Dimension(1540, 960));

        pnlHeading.setBackground(new java.awt.Color(0, 102, 204));
        pnlHeading.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblTitle.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 48)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(255, 204, 0));
        lblTitle.setText("Employee Management System");

        lblBarImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/employeesystem/resources/BarLogo.png"))); // NOI18N

        javax.swing.GroupLayout pnlHeadingLayout = new javax.swing.GroupLayout(pnlHeading);
        pnlHeading.setLayout(pnlHeadingLayout);
        pnlHeadingLayout.setHorizontalGroup(
            pnlHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadingLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblBarImage, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(282, 282, 282)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlHeadingLayout.setVerticalGroup(
            pnlHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHeadingLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(pnlHeadingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeadingLayout.createSequentialGroup()
                        .addComponent(lblBarImage)
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHeadingLayout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addGap(71, 71, 71))))
        );

        tabPaneMain.setBackground(new java.awt.Color(0, 102, 204));
        tabPaneMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabPaneMain.setForeground(new java.awt.Color(255, 204, 0));
        tabPaneMain.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N

        pnlHomePage.setBackground(new java.awt.Color(0, 102, 204));

        lblGreeting.setFont(new java.awt.Font("Monotype Corsiva", 0, 48)); // NOI18N
        lblGreeting.setForeground(new java.awt.Color(255, 204, 0));
        lblGreeting.setText("Greetings Admin!");

        lblWelcome.setFont(new java.awt.Font("Monotype Corsiva", 0, 48)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(255, 204, 0));
        lblWelcome.setText("And welcome to the newly developed Employee Management system");

        lblImageEmpManage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/employeesystem/resources/Employee Management.png"))); // NOI18N

        btnReturn.setBackground(new java.awt.Color(255, 204, 0));
        btnReturn.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnReturn.setForeground(new java.awt.Color(0, 102, 204));
        btnReturn.setText("<-  Return");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        lblDescription.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        lblDescription.setForeground(new java.awt.Color(255, 204, 0));
        lblDescription.setText("Here as the admin you can view the records  ");

        lblDescription1.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        lblDescription1.setForeground(new java.awt.Color(255, 204, 0));
        lblDescription1.setText("and details of all the employees and even alter it");

        lblNote.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        lblNote.setForeground(new java.awt.Color(255, 204, 0));
        lblNote.setText("As the administrator you have the authority to carry out ");

        lblNote2.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        lblNote2.setForeground(new java.awt.Color(255, 204, 0));
        lblNote2.setText("basic operations such as adding, deleting, and updating");

        lblNote3.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        lblNote3.setForeground(new java.awt.Color(255, 204, 0));
        lblNote3.setText("the details of all employees by accessing the \"Admin Dashboard\"");

        lblNote4.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        lblNote4.setForeground(new java.awt.Color(255, 204, 0));
        lblNote4.setText("and view their details in \"Employee Details\" tab");

        javax.swing.GroupLayout pnlHomePageLayout = new javax.swing.GroupLayout(pnlHomePage);
        pnlHomePage.setLayout(pnlHomePageLayout);
        pnlHomePageLayout.setHorizontalGroup(
            pnlHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomePageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlHomePageLayout.createSequentialGroup()
                .addGroup(pnlHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlHomePageLayout.createSequentialGroup()
                        .addGap(634, 634, 634)
                        .addComponent(lblGreeting))
                    .addGroup(pnlHomePageLayout.createSequentialGroup()
                        .addGap(205, 205, 205)
                        .addComponent(lblWelcome)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomePageLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(pnlHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNote2, javax.swing.GroupLayout.PREFERRED_SIZE, 706, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDescription)
                    .addGroup(pnlHomePageLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblDescription1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblNote)
                    .addComponent(lblNote3, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNote4, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 201, Short.MAX_VALUE)
                .addComponent(lblImageEmpManage, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
        );
        pnlHomePageLayout.setVerticalGroup(
            pnlHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlHomePageLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblGreeting)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWelcome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                .addGroup(pnlHomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomePageLayout.createSequentialGroup()
                        .addComponent(lblImageEmpManage)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlHomePageLayout.createSequentialGroup()
                        .addComponent(lblDescription)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescription1)
                        .addGap(46, 46, 46)
                        .addComponent(lblNote)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNote2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNote3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNote4)
                        .addGap(43, 43, 43)))
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107))
        );

        tabPaneMain.addTab("Home", pnlHomePage);

        pnlEmployeeLists.setBackground(new java.awt.Color(0, 102, 204));

        tableEmployeeInformation.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        tableEmployeeInformation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Full Name", "Address", "Contact No.", "Age", "Position", "Contract Period (Years)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEmployeeInformation.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tableEmployeeInformation);
        if (tableEmployeeInformation.getColumnModel().getColumnCount() > 0) {
            tableEmployeeInformation.getColumnModel().getColumn(0).setResizable(false);
            tableEmployeeInformation.getColumnModel().getColumn(1).setResizable(false);
            tableEmployeeInformation.getColumnModel().getColumn(2).setResizable(false);
            tableEmployeeInformation.getColumnModel().getColumn(3).setResizable(false);
            tableEmployeeInformation.getColumnModel().getColumn(4).setResizable(false);
            tableEmployeeInformation.getColumnModel().getColumn(5).setResizable(false);
            tableEmployeeInformation.getColumnModel().getColumn(6).setResizable(false);
        }

        lblTableinfo.setFont(new java.awt.Font("Monotype Corsiva", 0, 36)); // NOI18N
        lblTableinfo.setForeground(new java.awt.Color(255, 204, 0));
        lblTableinfo.setText("The details of all employees are given in the table below.");

        cmbboxSortbyID.setBackground(new java.awt.Color(255, 204, 0));
        cmbboxSortbyID.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        cmbboxSortbyID.setForeground(new java.awt.Color(0, 102, 204));
        cmbboxSortbyID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by ID", "Ascending", "Decending" }));
        cmbboxSortbyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbboxSortbyIDActionPerformed(evt);
            }
        });

        cmbboxSortbyName.setBackground(new java.awt.Color(255, 204, 0));
        cmbboxSortbyName.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        cmbboxSortbyName.setForeground(new java.awt.Color(0, 102, 204));
        cmbboxSortbyName.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by Name", "A - Z", "Z - A" }));
        cmbboxSortbyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbboxSortbyNameActionPerformed(evt);
            }
        });

        txtFldSearch.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtFldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldSearchActionPerformed(evt);
            }
        });

        btnSeach.setBackground(new java.awt.Color(255, 204, 0));
        btnSeach.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnSeach.setForeground(new java.awt.Color(0, 102, 204));
        btnSeach.setText("Search");
        btnSeach.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeachActionPerformed(evt);
            }
        });

        cmbboxSortbyPosition.setBackground(new java.awt.Color(255, 204, 0));
        cmbboxSortbyPosition.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        cmbboxSortbyPosition.setForeground(new java.awt.Color(0, 102, 204));
        cmbboxSortbyPosition.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort by Position", "A - Z", "Z - A" }));
        cmbboxSortbyPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbboxSortbyPositionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEmployeeListsLayout = new javax.swing.GroupLayout(pnlEmployeeLists);
        pnlEmployeeLists.setLayout(pnlEmployeeListsLayout);
        pnlEmployeeListsLayout.setHorizontalGroup(
            pnlEmployeeListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEmployeeListsLayout.createSequentialGroup()
                .addGroup(pnlEmployeeListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlEmployeeListsLayout.createSequentialGroup()
                        .addGap(426, 426, 426)
                        .addComponent(lblTableinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 752, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlEmployeeListsLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(pnlEmployeeListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlEmployeeListsLayout.createSequentialGroup()
                                .addComponent(cmbboxSortbyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79)
                                .addComponent(cmbboxSortbyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(93, 93, 93)
                                .addComponent(cmbboxSortbyPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(btnSeach)))))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        pnlEmployeeListsLayout.setVerticalGroup(
            pnlEmployeeListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEmployeeListsLayout.createSequentialGroup()
                .addContainerGap(106, Short.MAX_VALUE)
                .addComponent(lblTableinfo)
                .addGap(57, 57, 57)
                .addGroup(pnlEmployeeListsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSeach)
                    .addComponent(cmbboxSortbyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbboxSortbyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbboxSortbyPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );

        tabPaneMain.addTab("Employee Details", pnlEmployeeLists);

        pnlAdminDashboard.setBackground(new java.awt.Color(0, 102, 204));

        pnlFormTitle.setBackground(new java.awt.Color(255, 204, 0));

        lblFormTitle.setBackground(new java.awt.Color(0, 102, 204));
        lblFormTitle.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 30)); // NOI18N
        lblFormTitle.setForeground(new java.awt.Color(0, 102, 204));
        lblFormTitle.setText("Employee Managing Form");

        javax.swing.GroupLayout pnlFormTitleLayout = new javax.swing.GroupLayout(pnlFormTitle);
        pnlFormTitle.setLayout(pnlFormTitleLayout);
        pnlFormTitleLayout.setHorizontalGroup(
            pnlFormTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFormTitleLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(lblFormTitle)
                .addGap(16, 16, 16))
        );
        pnlFormTitleLayout.setVerticalGroup(
            pnlFormTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormTitleLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(lblFormTitle)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        txtFldEmpID.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtFldEmpID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldEmpIDActionPerformed(evt);
            }
        });

        txtFldFullName.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtFldFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldFullNameActionPerformed(evt);
            }
        });

        txtFldAddress.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N

        txtFldContact.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N

        txtFldAge.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N

        txtFldPosition.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N

        txtFldContract.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        txtFldContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldContractActionPerformed(evt);
            }
        });

        btnAddEmp.setBackground(new java.awt.Color(255, 204, 0));
        btnAddEmp.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnAddEmp.setForeground(new java.awt.Color(0, 102, 204));
        btnAddEmp.setText("Add");
        btnAddEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmpActionPerformed(evt);
            }
        });

        btnUpdateEmp.setBackground(new java.awt.Color(255, 204, 0));
        btnUpdateEmp.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnUpdateEmp.setForeground(new java.awt.Color(0, 102, 204));
        btnUpdateEmp.setText("Update");
        btnUpdateEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmpActionPerformed(evt);
            }
        });

        btnDeleteEmp.setBackground(new java.awt.Color(255, 204, 0));
        btnDeleteEmp.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnDeleteEmp.setForeground(new java.awt.Color(0, 102, 204));
        btnDeleteEmp.setText("Delete");
        btnDeleteEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEmpActionPerformed(evt);
            }
        });

        btnClearTxtFld.setBackground(new java.awt.Color(255, 204, 0));
        btnClearTxtFld.setFont(new java.awt.Font("Berlin Sans FB", 0, 14)); // NOI18N
        btnClearTxtFld.setForeground(new java.awt.Color(0, 102, 204));
        btnClearTxtFld.setText("Clear");
        btnClearTxtFld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearTxtFldActionPerformed(evt);
            }
        });

        lblEmpID.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblEmpID.setForeground(new java.awt.Color(255, 204, 0));
        lblEmpID.setText("Employee ID: ");

        lblContactNo.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblContactNo.setForeground(new java.awt.Color(255, 204, 0));
        lblContactNo.setText("Contact No:");

        lblFullName.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblFullName.setForeground(new java.awt.Color(255, 204, 0));
        lblFullName.setText("Full Name: ");

        lblAddress.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblAddress.setForeground(new java.awt.Color(255, 204, 0));
        lblAddress.setText("Address:");

        lblAge.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblAge.setForeground(new java.awt.Color(255, 204, 0));
        lblAge.setText("Age:");

        lblPosition.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblPosition.setForeground(new java.awt.Color(255, 204, 0));
        lblPosition.setText("Postion: ");

        lblContract.setFont(new java.awt.Font("Berlin Sans FB", 0, 18)); // NOI18N
        lblContract.setForeground(new java.awt.Color(255, 204, 0));
        lblContract.setText("Contract Period (Years):");

        javax.swing.GroupLayout pnlAdminDashboardLayout = new javax.swing.GroupLayout(pnlAdminDashboard);
        pnlAdminDashboard.setLayout(pnlAdminDashboardLayout);
        pnlAdminDashboardLayout.setHorizontalGroup(
            pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFldFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFldEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(565, 565, 565)
                                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblContactNo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36))
                            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                                .addComponent(btnAddEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(175, 175, 175)
                                .addComponent(btnUpdateEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDeleteEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(191, 191, 191)))
                        .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFldPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFldContact, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnClearTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                        .addGap(537, 537, 537)
                        .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                                .addComponent(lblContract)
                                .addGap(74, 74, 74)
                                .addComponent(txtFldContract, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pnlFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(275, Short.MAX_VALUE))
        );
        pnlAdminDashboardLayout.setVerticalGroup(
            pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminDashboardLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(pnlFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmpID)
                    .addComponent(txtFldEmpID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblContactNo)
                    .addComponent(txtFldContact, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFldFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFullName)
                    .addComponent(txtFldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAge))
                .addGap(99, 99, 99)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFldAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAddress)
                    .addComponent(lblPosition)
                    .addComponent(txtFldPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContract)
                    .addComponent(txtFldContract, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(pnlAdminDashboardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearTxtFld, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(113, 113, 113))
        );

        tabPaneMain.addTab("Admin Dashboard", pnlAdminDashboard);

        javax.swing.GroupLayout pnlMainAdminLayout = new javax.swing.GroupLayout(pnlMainAdmin);
        pnlMainAdmin.setLayout(pnlMainAdminLayout);
        pnlMainAdminLayout.setHorizontalGroup(
            pnlMainAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPaneMain)
            .addComponent(pnlHeading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlMainAdminLayout.setVerticalGroup(
            pnlMainAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainAdminLayout.createSequentialGroup()
                .addComponent(pnlHeading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabPaneMain, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1672, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlMainAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 982, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlMainAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFldContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldContractActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldContractActionPerformed

    private void btnAddEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmpActionPerformed
        AddButtonLogic(); //Calling Add button logic
    }//GEN-LAST:event_btnAddEmpActionPerformed

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        ReturnToLogin(); //Calling Return button logic
    }//GEN-LAST:event_btnReturnActionPerformed

    private void txtFldEmpIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldEmpIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldEmpIDActionPerformed

    private void txtFldFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldFullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldFullNameActionPerformed

    private void btnClearTxtFldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearTxtFldActionPerformed
        ClearButtonLogic();//Calling Clear button logic
    }//GEN-LAST:event_btnClearTxtFldActionPerformed

    private void btnUpdateEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEmpActionPerformed
        UpdateButtonLogic();//Calling update button logic
    }//GEN-LAST:event_btnUpdateEmpActionPerformed

    private void btnDeleteEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEmpActionPerformed
        DeleteButtonLogic();//Calling delete button logic
    }//GEN-LAST:event_btnDeleteEmpActionPerformed

    private void cmbboxSortbyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbboxSortbyIDActionPerformed
        int BoxValue = cmbboxSortbyID.getSelectedIndex();
        
        if (BoxValue == 1) //Selection sort in ascending order
        {
            employeeTable.setRowCount(0);
            List<EmployeeModel> sortedList = selectionSort.sortByEmpID(linkedList, false);
            for(EmployeeModel employee : sortedList) 
            {
                AddingEmployee(employee);
            }
        }
        else if(BoxValue == 2)//Selection sort in desceding order
        {
             employeeTable.setRowCount(0);
            List<EmployeeModel> sortedList = selectionSort.sortByEmpID(linkedList, true);
            for(EmployeeModel employee : sortedList) 
            {
                AddingEmployee(employee);
            }
        }
        cmbboxSortbyID.setSelectedIndex(0);
    }//GEN-LAST:event_cmbboxSortbyIDActionPerformed

    private void cmbboxSortbyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbboxSortbyNameActionPerformed
        int BoxValue = cmbboxSortbyName.getSelectedIndex();

        if (BoxValue == 1) //Insertion sort in ascending order
        { 
            employeeTable.setRowCount(0);
            List<EmployeeModel> sortedList = insertionSort.sortByName(linkedList, false);
            for(EmployeeModel employee : sortedList) 
            {
                AddingEmployee(employee);
            }
        }
        else if(BoxValue == 2) //Insertion sort in desceding order
        { 
            employeeTable.setRowCount(0);
            List<EmployeeModel> sortedList = insertionSort.sortByName(linkedList, true);
            for(EmployeeModel employee : sortedList) 
            {
                AddingEmployee(employee);
            }
        }
        cmbboxSortbyName.setSelectedIndex(0);
    }//GEN-LAST:event_cmbboxSortbyNameActionPerformed

    private void btnSeachActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeachActionPerformed
        
        //Sorting the list in ascending order
        List<EmployeeModel> sortedList = insertionSort.sortByName(linkedList, false);
        
        // Input validation
        String searchText = txtFldSearch.getText().trim();
        if (searchText.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Please enter a name to search", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        BinarySearch search = new BinarySearch();
        EmployeeModel searchedData = search.searchByName(searchText, sortedList, 0, sortedList.size()-1);
        
        if(searchedData != null) { 
            //Display the result in JOptionPane 
            String Result =
                "Employee Details:\n\n" +
                "ID: " + searchedData.getEmpID() + "\n" +
                "Name: " + searchedData.getFullName() + "\n" +
                "Position: " + searchedData.getPosition() + "\n" +
                "Address: " + searchedData.getAddress() + "\n" +
                "Contact: " + searchedData.getContactNo() + "\n" +
                "Age: " + searchedData.getAge() + "\n" +
                "Contract Period: " + searchedData.getContractPeriod() + " years";
            
            JOptionPane.showMessageDialog(rootPane, Result, "Search Result", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Sorry, the person is not in our Database", "Information",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSeachActionPerformed

    private void txtFldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldSearchActionPerformed

    private void cmbboxSortbyPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbboxSortbyPositionActionPerformed
       int BoxValue = cmbboxSortbyPosition.getSelectedIndex();

        if (BoxValue == 1) //Merge sort in ascending order
        {
            employeeTable.setRowCount(0);
            List<EmployeeModel> sortedList = mergeSort.sortByPosition(linkedList, false);
            for(EmployeeModel employee : sortedList) 
            {
                AddingEmployee(employee);
            }
        }
        else if(BoxValue == 2) //Merge sort in desceding order
        {
            employeeTable.setRowCount(0);
            List<EmployeeModel> sortedList = mergeSort.sortByPosition(linkedList, true);
            for(EmployeeModel employee : sortedList) 
            {
                AddingEmployee(employee);
            }
        }
        cmbboxSortbyPosition.setSelectedIndex(0);
    }//GEN-LAST:event_cmbboxSortbyPositionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminFrame().setVisible(true);
            }
        });
    }
    /**
    * Button process/logic for returning back to Login page
    */
    public void ReturnToLogin(){ //Returning to login page
        EmployeeApp Return = new EmployeeApp();
        int choiceofUser =  JOptionPane.showConfirmDialog(rootPane, "Do you want to return back to login page??", "Confirmation", JOptionPane.YES_NO_OPTION);
        if(choiceofUser==JOptionPane.YES_OPTION)
        {
            Return.setVisible(true);
            dispose();
        }
    }
    
    /**
     * Pre-added data for the table
     */
    public void PreviousEmployees(){ //Values in table by default
        
        //Object creation
        EmployeeModel Employee1 = new EmployeeModel(1, "Ram Bahadur", "Kathmandu", "9841236570", 35, "Developer", 5);
        EmployeeModel Employee2 = new EmployeeModel(2, "Shyam Nepal", "Bhaktapur", "9841236571", 25, "Tester", 2);
        EmployeeModel Employee3 = new EmployeeModel(3, "Krishna Lal", "Lalitpur", "9841236572", 32, "Designer", 6);
        EmployeeModel Employee4 = new EmployeeModel(4, "Hari Tiwari", "Bhaktapur", "9841236573", 44, "Developer", 8);
        EmployeeModel Employee5 = new EmployeeModel(5, "Indra Khanal", "Kathmandu", "9841236574", 50, "Guard", 7);
        EmployeeModel Employee6 = new EmployeeModel(6, "Shiv Shrestha", "Lalitpur", "9841236575", 23, "Janitor", 12);
        EmployeeModel Employee7 = new EmployeeModel(7, "Deepak Gurung", "Kathmandu", "9841236576", 47, "Tester", 4);
        EmployeeModel Employee8 = new EmployeeModel(8, "Prakash Ghimire", "Lalitpur", "9841236577", 38, "Developer", 1);
        EmployeeModel Employee9 = new EmployeeModel(9, "Raj Malla", "Bhaktapur", "9841236578", 31, "Manager", 3);
        EmployeeModel Employee10 = new EmployeeModel(10, "Puspa Singh", "Kathmandu", "9841236579", 45, "Designer", 10);
        
        //Adding data to linked list and table
        linkedList.add(Employee1);
        AddingEmployee(Employee1);
        linkedList.add(Employee2);
        AddingEmployee(Employee2);
        linkedList.add(Employee3);
        AddingEmployee(Employee3);
        linkedList.add(Employee4);
        AddingEmployee(Employee4);
        linkedList.add(Employee5);
        AddingEmployee(Employee5);
        linkedList.add(Employee6);
        AddingEmployee(Employee6);
        linkedList.add(Employee7);
        AddingEmployee(Employee7);
        linkedList.add(Employee8);
        AddingEmployee(Employee8);
        linkedList.add(Employee9);
        AddingEmployee(Employee9);
        linkedList.add(Employee10);
        AddingEmployee(Employee10);
        
    }
    
    
    
    /**
     * Button to add details of the employee in the table
     */
    
    //Add Button
    public void AddButtonLogic(){
        if(txtFldEmpID.getText().isEmpty() || txtFldFullName.getText().isEmpty() || txtFldAddress.getText().isEmpty() || txtFldContact.getText().isEmpty() || txtFldAge.getText().isEmpty() || txtFldPosition.getText().isEmpty() || txtFldContract.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please fill out all the necessary information", "Alert",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try{ //Exception Handling
        //Variable declaration for storing the text that is extracted from the JTextField
            int empID = Integer.parseInt(txtFldEmpID.getText());
            String fullName = txtFldFullName.getText();
            String Address = txtFldAddress.getText();
            String contactNo = txtFldContact.getText();
            int Age = Integer.parseInt(txtFldAge.getText());
            String Position = txtFldPosition.getText();
            int contractPeriod = Integer.parseInt(txtFldContract.getText());
            boolean Condition = false;
            
            EmployeeModel employeeDetails = new EmployeeModel(empID,fullName,Address,contactNo,Age,Position,contractPeriod);
            
            int choiceofUser =  JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to add new employee's details?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(choiceofUser==JOptionPane.YES_OPTION) //confirmation
            {
                for(EmployeeModel obj : linkedList){ //for each loop
                if(obj.getEmpID() == Integer.parseInt(txtFldEmpID.getText()))
                {
                    Condition = true;
                }
                }


                if(Condition == false){

                    JOptionPane.showMessageDialog(rootPane,"Employee added sucessfully.","Information",JOptionPane.INFORMATION_MESSAGE);
                    linkedList.add(employeeDetails);
                    AddingEmployee(employeeDetails);
                }
                else {

                    JOptionPane.showMessageDialog(rootPane,"Employee already exists","Alert",JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }
            
        }
        catch(NumberFormatException E1){ //Exception Handling
            JOptionPane.showMessageDialog(rootPane,"Wrong data type. Employee ID, Contact No. , Age and Contract Period should be an Integer","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
    }
    /**
     * Adding new data into the table
     * 
     * @param Employee parameter passed to extract data from EmployeeModel
     */
    
    public void AddingEmployee(EmployeeModel Employee){
        
        employeeTable = (DefaultTableModel) tableEmployeeInformation.getModel();
        employeeTable.addRow(new Object[]{Employee.getEmpID(), Employee.getFullName(), Employee.getAddress(), Employee.getContactNo(), Employee.getAge(), Employee.getPosition(), Employee.getContractPeriod()});
    }
    
    
    /**
     * Updating already existing data in the table
     */
    // Update Button
    public void UpdateButtonLogic() {
    if(txtFldEmpID.getText().isEmpty() || txtFldFullName.getText().isEmpty() || txtFldAddress.getText().isEmpty() || txtFldContact.getText().isEmpty() || txtFldAge.getText().isEmpty() || txtFldPosition.getText().isEmpty() || txtFldContract.getText().isEmpty()) {
        JOptionPane.showMessageDialog(rootPane, "Please fill out all the necessary information", "Alert", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    try { //exception handling
        //Variable declaration for storing the text that is extracted from the JTextField
        int empID = Integer.parseInt(txtFldEmpID.getText());
        String fullName = txtFldFullName.getText();
        String address = txtFldAddress.getText();
        String contactNo = txtFldContact.getText();
        int age = Integer.parseInt(txtFldAge.getText());
        String position = txtFldPosition.getText();
        int contractPeriod = Integer.parseInt(txtFldContract.getText());
        boolean Condition = false;
        
        int choiceofUser =  JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to update this employee's details?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if(choiceofUser==JOptionPane.YES_OPTION) //confirmation
        {
        
            for(EmployeeModel obj : linkedList) { //for each loop
                if(obj.getEmpID() == empID) {
                    DeletingEmployee(obj);
                    linkedList.remove(obj);

                    EmployeeModel updatedEmployee = new EmployeeModel(empID, fullName, address, contactNo, age, position, contractPeriod);
                    linkedList.add(updatedEmployee);
                    AddingEmployee(updatedEmployee);

                    JOptionPane.showMessageDialog(rootPane, "Employee details updated successfully.", "Information", JOptionPane.INFORMATION_MESSAGE);
                    Condition = true;
                    break;
                }
            }

            if(Condition == false) {
                JOptionPane.showMessageDialog(rootPane, "Employee does not exist", "Alert", JOptionPane.WARNING_MESSAGE);
            }
        }
        
    } catch(NumberFormatException e) { //Exception Handling
        JOptionPane.showMessageDialog(rootPane, "Wrong data type. Employee ID, Contact No., Age and Contract Period should be numbers", "Warning", JOptionPane.WARNING_MESSAGE);
    }
}
    /**
     * Deleting an already existing data in the table
     */
    // Delete Button
    public void DeleteButtonLogic(){
        if(txtFldEmpID.getText().isEmpty() || txtFldFullName.getText().isEmpty() || txtFldAddress.getText().isEmpty() || txtFldContact.getText().isEmpty() || txtFldAge.getText().isEmpty() || txtFldPosition.getText().isEmpty() || txtFldContract.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please fill out all the necessary information", "Alert",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try{ //exception handling
            
            int empID = Integer.parseInt(txtFldEmpID.getText());
            boolean Condition = false;
            
            int choiceofUser =  JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete this employee's details?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if(choiceofUser==JOptionPane.YES_OPTION) //confirmation
            {
            
            for(EmployeeModel obj : linkedList){ //for each loop
            if(obj.getEmpID() == Integer.parseInt(txtFldEmpID.getText()))
            {
                linkedList.remove(obj);
                DeletingEmployee(obj);
                Condition = true;
            }
            }
            
            
            if(Condition == true){
                JOptionPane.showMessageDialog(rootPane,"Employee details deleted successfully.","Information",JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                
                JOptionPane.showMessageDialog(rootPane,"Employee does not exist","Alert",JOptionPane.WARNING_MESSAGE);
                return;
            }
            }
            
        }
        catch(NumberFormatException E1){//Exception Handling
            JOptionPane.showMessageDialog(rootPane,"Wrong data type. Employee ID, Contact No. , Age and Contract Period should be an Integer","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
    }
    /**
     * Core process/logic for removing data from table
     * @param Employee parameter used to extract data from EmployeeModel
     */
    public void DeletingEmployee(EmployeeModel Employee) { //deleting employee main code
        
        for (int i = 0; i < employeeTable.getRowCount(); i++) {
            if (employeeTable.getValueAt(i, 0).toString().equals(String.valueOf(Employee.getEmpID()))) {
                employeeTable.removeRow(i);
                break;
            }
        }
    }
    
    /**
     * Used to clear out all the JTextFields
     */
    //Clear Button
    public void ClearButtonLogic(){
        int choiceofUser =  JOptionPane.showConfirmDialog(rootPane, "Do you want to clear all text fields?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if(choiceofUser==JOptionPane.YES_OPTION) //confirmation
        {
            txtFldEmpID.setText("");
            txtFldFullName.setText("");
            txtFldAddress.setText("");
            txtFldContact.setText("");
            txtFldAge.setText("");
            txtFldPosition.setText("");
            txtFldContract.setText("");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEmp;
    private javax.swing.JButton btnClearTxtFld;
    private javax.swing.JButton btnDeleteEmp;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSeach;
    private javax.swing.JButton btnUpdateEmp;
    private javax.swing.JComboBox<String> cmbboxSortbyID;
    private javax.swing.JComboBox<String> cmbboxSortbyName;
    private javax.swing.JComboBox<String> cmbboxSortbyPosition;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBarImage;
    private javax.swing.JLabel lblContactNo;
    private javax.swing.JLabel lblContract;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblDescription1;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblFormTitle;
    private javax.swing.JLabel lblFullName;
    private javax.swing.JLabel lblGreeting;
    private javax.swing.JLabel lblImageEmpManage;
    private javax.swing.JLabel lblNote;
    private javax.swing.JLabel lblNote2;
    private javax.swing.JLabel lblNote3;
    private javax.swing.JLabel lblNote4;
    private javax.swing.JLabel lblPosition;
    private javax.swing.JLabel lblTableinfo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JPanel pnlAdminDashboard;
    private javax.swing.JPanel pnlEmployeeLists;
    private javax.swing.JPanel pnlFormTitle;
    private javax.swing.JPanel pnlHeading;
    private javax.swing.JPanel pnlHomePage;
    private javax.swing.JPanel pnlMainAdmin;
    private javax.swing.JTabbedPane tabPaneMain;
    private javax.swing.JTable tableEmployeeInformation;
    private javax.swing.JTextField txtFldAddress;
    private javax.swing.JTextField txtFldAge;
    private javax.swing.JTextField txtFldContact;
    private javax.swing.JTextField txtFldContract;
    private javax.swing.JTextField txtFldEmpID;
    private javax.swing.JTextField txtFldFullName;
    private javax.swing.JTextField txtFldPosition;
    private javax.swing.JTextField txtFldSearch;
    // End of variables declaration//GEN-END:variables
}
